name: Release
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - beta
      - main
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache
    environment: ${{ github.ref_name == 'main' && 'production' || 'development' }}
    steps:

      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          export_environment_variables: true
          service_account: terraform@${{ vars.GOOGLE_PROJECT }}.iam.gserviceaccount.com
          workload_identity_provider: projects/${{ vars.GOOGLE_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions-workflows/providers/github-actions

      - name: Set up Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Test
        env:
          GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
        run: make test

      - name: Analyze
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

      - name: Init Terraform cache
        run: mkdir -p $TF_PLUGIN_CACHE_DIR

      - name: Setup Terraform cache
        uses: actions/cache@v4
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: ${{ runner.os }}-terraform-

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.3
          terraform_wrapper: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Install semantic-release exec plugin
        run: npm install --save-dev @semantic-release/exec

      - name: Release
        env:
          ARTIFACT_REGISTRY_LOCATION: ${{ vars.ARTIFACT_REGISTRY_LOCATION }}
          CREDENTIALS: ${{ secrets.CREDENTIALS }}
          DEV_BUCKET: ${{ vars.DEV_BUCKET }}
          DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
          FIRESTORE_LOCATION: ${{ vars.FIRESTORE_LOCATION }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_PROJECT: ${{ vars.GOOGLE_PROJECT }}
          GOOGLE_REGION: ${{ vars.GOOGLE_REGION }}
          GOOGLE_ZONE: ${{ vars.GOOGLE_ZONE }}
          PROD_BUCKET: ${{ vars.PROD_BUCKET }}
          SEND_GRID_API_KEY: ${{ secrets.SEND_GRID_API_KEY }}
        run: npx semantic-release@22

permissions:
  contents: write
  id-token: write
  issues: write
  pull-requests: write
